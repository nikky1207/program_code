2.1.Biggest of Two Numbers
Code:-

#include <stdio.h>

int main() {
    int a, b, big;
    
    printf("Enter two numbers: ");
    scanf("%d %d", &a, &b);
    
    if (a > b) {
        big = a;
    } else {
        big = b;
    }
    
    printf("Biggest number: %d\n", big);
    
    return 0;
}
-----------------------------------------------------------------------------------------
2.2.Biggest of Three Numbers
Code:-

#include <stdio.h>

int main() {
    int a, b, c, big;
    
    printf("Enter three numbers: ");
    scanf("%d %d %d", &a, &b, &c);
    
    if (a > b) {
        if (a > c) {
            big = a;
        } else {
            big = c;
        }
    } else {
        if (b > c) {
            big = b;
        } else {
            big = c;
        }
    }
    
    printf("Biggest number: %d\n", big);
    
    return 0;
}
-----------------------------------------------------------------------------------------
2.3.Even or Odd
Code:-

#include <stdio.h>

int main() {
    int num, rem;
    
    printf("Enter a number: ");
    scanf("%d", &num);
    
    rem = num % 2;
    
    if (rem == 0) {
        printf("%d is even.\n", num);
    } else {
        printf("%d is odd.\n", num);
    }
    
    return 0;
}
-----------------------------------------------------------------------------------------
2.4. Type of Triangle
Code:-

#include <stdio.h>
#include <math.h>

int main() {
    int a, b, c;
    printf("Enter the lengths of the sides of the triangle: ");
    scanf("%d %d %d", &a, &b, &c);

    // Check if triangle can be formed
    if (a + b <= c || a + c <= b || b + c <= a) {
        printf("Triangle can't be formed.\n");
        return 0;
    }

    // Check for Equilateral triangle
    if (a == b && b == c) {
        printf("Equilateral Triangle.\n");
    }
    // Check for Isosceles triangle
    else if (a == b || b == c || c == a) {
        // Check for Right angled triangle
        if (a*a + b*b == c*c || b*b + c*c == a*a || c*c + a*a == b*b) {
            printf("Isosceles + Right Angled Triangle.\n");
        } else {
            printf("Isosceles Triangle.\n");
        }
    }
    // Check for Scalene triangle
    else if (a != b && b != c && c != a) {
        // Check for Right angled triangle
        if (a*a + b*b == c*c || b*b + c*c == a*a || c*c + a*a == b*b) {
            printf("Scalene + Right Angled Triangle.\n");
        } else {
            printf("Scalene Triangle.\n");
        }
    }

    return 0;
}
-----------------------------------------------------------------------------------------
2.5.Leap Year or Not
Code:-

#include <stdio.h>

int main() {
    int year;

    printf("Enter a year: ");
    scanf("%d", &year);

    if (year % 4 == 0) {
        if (year % 100 == 0) {
            if (year % 400 == 0) {
                printf("%d is a leap year.", year);
            } else {
                printf("%d is not a leap year.", year);
            }
        } else {
            printf("%d is a leap year.", year);
        }
    } else {
        printf("%d is not a leap year.", year);
    }

    return 0;
}

-----------------------------------------------------------------------------------------
2.6.Armstrong Number Or Not
Code:- 

#include <stdio.h>
#include <math.h>

int main() {
    int num, originalNum, remainder, n = 0;
    float result = 0.0;

    printf("Enter an integer: ");
    scanf("%d", &num);

    originalNum = num;

    // count number of digits
    while (originalNum != 0) {
        originalNum /= 10;
        ++n;
    }

    originalNum = num;

    // calculate sum of power of digits
    while (originalNum != 0) {
        remainder = originalNum % 10;
        result += pow(remainder, n);
        originalNum /= 10;
    }

    // check if the result is equal to the original number
    if ((int)result == num) {
        printf("%d is an Armstrong number.", num);
    } else {
        printf("%d is not an Armstrong number.", num);
    }

    return 0;
}
--------------------------------------------------------------------------------------------
2.7. Roots of Quadratic Equation
Code:-

#include <stdio.h>
#include <math.h>

int main() {
    float a, b, c, determinant, root1, root2, realPart, imaginaryPart;
    
    // Input coefficients a, b, and c
    printf("Enter coefficients a, b, and c: ");
    scanf("%f %f %f", &a, &b, &c);
    
    // Calculate determinant
    determinant = b * b - 4 * a * c;
    
    // Check the value of determinant
    if (determinant > 0) {
        // Real and distinct roots
        root1 = (-b + sqrt(determinant)) / (2 * a);
        root2 = (-b - sqrt(determinant)) / (2 * a);
        printf("Roots are %.2f and %.2f", root1, root2);
    } else if (determinant == 0) {
        // Real and equal roots
        root1 = root2 = -b / (2 * a);
        printf("Roots are %.2f and %.2f", root1, root2);
    } else {
        // Imaginary roots
        realPart = -b / (2 * a);
        imaginaryPart = sqrt(-determinant) / (2 * a);
        printf("Roots are %.2f+%.2fi and %.2f-%.2fi", realPart, imaginaryPart, realPart, imaginaryPart);
    }
    
    return 0;
}
---------------------------------------------------------------------------------------------------------
2.8.Quadrant of a Point
Code:-

#include <stdio.h>

int main() {
    float x, y;
    printf("Enter the x and y coordinates of the point: ");
    scanf("%f %f", &x, &y);
    
    if (x > 0 && y > 0) {
        printf("The point is in quadrant 1");
    } else if (x < 0 && y > 0) {
        printf("The point is in quadrant 2");
    } else if (x < 0 && y < 0) {
        printf("The point is in quadrant 3");
    } else if (x > 0 && y < 0) {
        printf("The point is in quadrant 4");
    } else if (x == 0 && y != 0) {
        printf("The point is on the y-axis");
    } else if (x != 0 && y == 0) {
        printf("The point is on the x-axis");
    } else {
        printf("The point is at the origin");
    }
    
    return 0;
}
--------------------------------------------------------------------------------------------
2.9.Day of the Week
Code:-

#include <stdio.h>

int main() {
    int day;
    
    printf("Enter a number between 1-7: ");
    scanf("%d", &day);
    
    if (day == 1) {
        printf("Sunday");
    } else if (day == 2) {
        printf("Monday");
    } else if (day == 3) {
        printf("Tuesday");
    } else if (day == 4) {
        printf("Wednesday");
    } else if (day == 5) {
        printf("Thursday");
    } else if (day == 6) {
        printf("Friday");
    } else if (day == 7) {
        printf("Saturday");
    } else {
        printf("Invalid Input/Choice");
    }
    
    return 0;
}
--------------------------------------------------------------------------------------------
2.10.Choice Based Arithmetic
Code:-

#include <stdio.h>

int main() {
    int operand1, operand2, result;
    char operator, choice;

    printf("Enter operand 1: ");
    scanf("%d", &operand1);

    printf("Enter operand 2: ");
    scanf("%d", &operand2);

    printf("Choose an operator: \n");
    printf("(+) Add\n(-) Subtract\n(*) Multiply\n(/) Divide\n(%) Modulo\n");
    printf("(A) Average\n(S) Maximum\n(M) Minimum\n(D) Difference\n(R) Remainder\n");
    printf("(1) Square of operand 1\n(2) Square of operand 2\n");
    scanf(" %c", &choice);

    switch(choice) {
        case '+':
            operator = '+';
            result = operand1 + operand2;
            break;
        case '-':
            operator = '-';
            result = operand1 - operand2;
            break;
        case '*':
            operator = '*';
            result = operand1 * operand2;
            break;
        case '/':
            operator = '/';
            result = operand1 / operand2;
            break;
        case '%':
            operator = '%';
            result = operand1 % operand2;
            break;
        case 'A':
            operator = 'A';
            result = (operand1 + operand2) / 2;
            break;
        case 'S':
            operator = 'S';
            result = operand1 > operand2 ? operand1 : operand2;
            break;
        case 'M':
            operator = 'M';
            result = operand1 < operand2 ? operand1 : operand2;
            break;
        case 'D':
            operator = 'D';
            result = operand1 - operand2;
            break;
        case 'R':
            operator = 'R';
            result = operand1 % operand2;
            break;
        case '1':
            operator = '1';
            result = operand1 * operand1;
            break;
        case '2':
            operator = '2';
            result = operand2 * operand2;
            break;
        default:
            printf("Invalid choice!\n");
            return 1;
    }

    printf("%d %c %d = %d\n", operand1, operator, operand2, result);

    return 0;
}
--------------------------------------------------------------------------------------------
2.11.Vowel or Consonant
Code:-

#include <stdio.h>

int main() {
    char ch;

    printf("Enter a character: ");
    scanf("%c", &ch);

    if (ch >= 'a' && ch <= 'z') {
        switch (ch) {
            case 'a':
            case 'e':
            case 'i':
            case 'o':
            case 'u':
                printf("%c is a vowel.\n", ch);
                break;
            default:
                printf("%c is a consonant.\n", ch);
                break;
        }
    } else if (ch >= 'A' && ch <= 'Z') {
        switch (ch) {
            case 'A':
            case 'E':
            case 'I':
            case 'O':
            case 'U':
                printf("%c is a vowel.\n", ch);
                break;
            default:
                printf("%c is a consonant.\n", ch);
                break;
        }
    } else {
        printf("%c is not an alphabet.\n", ch);
    }

    return 0;
}
--------------------------------------------------------------------------------------------
2.12. Income Tax Calculation
Code:-

#include <stdio.h>

int main() {
    float basic, da, hra, gross, savings, taxable_income, tax, net;

    printf("Enter basic pay: ");
    scanf("%f", &basic);

    // Calculate DA, HRA, and Gross
    da = basic * 0.15;
    hra = basic * 0.08;
    gross = basic + da + hra;

    printf("Gross Pay: %.2f\n", gross);

    printf("Enter Savings: ");
    scanf("%f", &savings);

    // Calculate Taxable Income
    taxable_income = gross - savings;

    // Calculate Tax
    if (taxable_income <= 250000) {
        tax = 0;
    }
    else if (taxable_income <= 500000) {
        tax = (taxable_income - 250000) * 0.1;
    }
    else if (taxable_income <= 1000000) {
        tax = 25000 + ((taxable_income - 500000) * 0.2);
    }
    else {
        tax = 125000 + ((taxable_income - 1000000) * 0.3);
    }

    printf("Tax: %.2f\n", tax);

    // Calculate Net Pay
    net = gross - tax - savings;

    printf("Net Pay: %.2f\n", net);

    return 0;
}
--------------------------------------------------------------------------------------------
2.13. Enegy Bill Calculation
Code:-

#include<stdio.h>

int main()
{
    int nunits;
    float total_bill;

    printf("Enter the number of units: ");
    scanf("%d", &nunits);

    if(nunits <= 100)
    {
        total_bill = 1000;
        total_bill += 3 * nunits;
    }
    else if(nunits <= 200)
    {
        total_bill = 1000 + (nunits - 100) * 5;
    }
    else if(nunits <= 400)
    {
        total_bill = 1000 + 500 + (nunits - 200) * 7;
    }
    else
    {
        total_bill = 1000 + 500 + 1400 + (nunits - 400) * 10;
    }

    printf("Total Bill = %.2f", total_bill);

    return 0;
}